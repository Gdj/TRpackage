@use "sass:math";

.particle1-area { position: relative; overflow: hidden;
  width: 260px; height: 180px; background-color: #333;
  .particle {
    $moveDurations: 15000 + math.random(4000) + s;
    position: absolute; top:-5px; left: 50%;
    animation: shoot $moveDurations ease-out infinite;
    animation-name: shoot2, fade;
    border-radius: 50%;
    background-image: radial-gradient(
    hsl(192, 100%, 80%),
    hsl(192, 100%, 80%) 10%,
    hsla(192, 100%, 80%, 0) 56%
    );
    @for $i from 0 to 20 {
    $t: (1 + .01 * math.random(100)) * 1s;
      &:nth-child(#{ $i + 1 }) {
        $d: math.random(4) + px;
        width: $d; height: $d;        
        transform: translate(math.random(180) - 90px, math.random(50)* 5px);
        animation-duration: $t;
        animation-delay: -.01 * math.random(100) * $t;
      }
    }
  }

  @keyframes shoot2 {
      0% { transform: translate( 50%, 0); }
  }
}          

.particle2-area { position: relative; overflow: hidden;
  width: 330px; height: 100px; /* border: 1px solid #f00; */
  background-color: #333;
  $boxW: 100px;
  $boxH: 150px;
  $particleWidth: 5px;
  $particleNum: 20;
  $particleColor: hsl(180, 100%, 80%);
  
  .particle  {
    position: absolute; left: -0px; top: -10px
    animation-iteration-count: infinite;
    animation-timing-function: linear;

    span { display: block;
    width: 100%; height: 100%;
    border-radius: 50%;
    mix-blend-mode: screen;
    background-image: radial-gradient(
        hsl(56, 100%, 80%),
        hsl(32, 100%, 80%) 10%,
        hsla(180, 100%, 80%, 0) 56%
    );

    animation: fadein-frames 200ms infinite, scale-frames 2s 1;  
    @keyframes fade-frames {
        0%   { opacity: 0; }
        15%  { opacity: 0.7; }
        40%  { opacity: 0.4; }
        70%  { opacity: 0.1; }
        100% { opacity: 0; }
    }
    @keyframes scale-frames {
        0% { transform: scale3d(0.3, 0.3, 1); }
        50% { transform: scale3d(0.2, 0.8, 1); }
        100% { transform: scale3d(0.3, 0.3, 0); }
    }
    }

    @for $i from 1 through $particleNum {
      &:nth-child(#{$i}) {
        $circleSize: math.random(math.div($particleWidth, 1px));
        width: $circleSize + px;
        height: $circleSize + px;

        $startPositionY: math.random(10) - 10px;
        $framesName: "move-frames-" + $i;
        $moveDuration: 7000 + math.random(4000) + ms;

        animation-name: #{$framesName};
        animation-duration: $moveDuration;
        animation-delay: math.random(11000) + ms;

        @keyframes #{$framesName} {
          from {
              transform: translate3d(
              #{ math.random(math.div($boxW, 1px)) - ($boxW + 50px) },
              #{ $startPositionY + $boxH },
              1px
              );
              opacity: 1;
          }
          to {
              transform: translate3d(
              #{math.random(math.div($boxW, 1px)) + 50px},
              #{- $startPositionY },
              10px
              );
              opacity: 0;
          }
        }

        span {
         animation-delay: math.random(2000) + ms;
        }
      }
    }
  }
  
  @keyframes shoot {
      0% { transform: translate(math.random(50)+50px, math.random(100)*5px); }
  }
  @keyframes fade { 
      to { opacity: 0 } 
  }
}